-- Tabela para controlar permissões
CREATE TABLE IF NOT EXISTS public.user_permissions (
    id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
    user_id UUID NOT NULL UNIQUE REFERENCES auth.users(id) ON DELETE CASCADE,
    can_register_extra_time BOOLEAN NOT NULL DEFAULT false,
    created_at TIMESTAMPTZ WITH TIME ZONE DEFAULT timezone('utc'::text, now()) NOT NULL
);

-- Tabela para os registros de tempo extra
CREATE TABLE IF NOT EXISTS public.registros_tempo_extra (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    created_at TIMESTAMPTZ WITH TIME ZONE DEFAULT timezone('utc'::text, now()) NOT NULL,
    colaborador_nome TEXT NOT NULL,
    data DATE NOT NULL,
    tempo_em_minutos INTEGER NOT NULL,
    observacao TEXT,
    registrado_por_id UUID REFERENCES auth.users(id),
    registrado_por_email TEXT
);

-- Ativar RLS (Row Level Security) para as novas tabelas
ALTER TABLE public.user_permissions ENABLE ROW LEVEL SECURITY;
ALTER TABLE public.registros_tempo_extra ENABLE ROW LEVEL SECURITY;

-- Políticas de Acesso:
-- Apenas o admin (maviael) pode ver e editar todas as permissões.
CREATE POLICY "Admin pode gerenciar permissões"
ON public.user_permissions FOR ALL
USING ( (SELECT auth.jwt() ->> 'email') = 'maviael2013@gmail.com' )
WITH CHECK ( (SELECT auth.jwt() ->> 'email') = 'maviael2013@gmail.com' );

-- Usuários autenticados podem ver sua PRÓPRIA permissão.
CREATE POLICY "Usuários podem ver sua própria permissão"
ON public.user_permissions FOR SELECT
USING ( auth.uid() = user_id );

-- Usuários com permissão podem criar registros de tempo extra.
CREATE POLICY "Usuários autorizados podem criar registros de tempo extra"
ON public.registros_tempo_extra FOR INSERT
WITH CHECK (
    (
        SELECT can_register_extra_time
        FROM public.user_permissions
        WHERE user_id = auth.uid()
    ) = true
);

-- Usuários autorizados podem ver todos os registros de tempo extra.
CREATE POLICY "Usuários autorizados podem ver os registros de tempo extra"
ON public.registros_tempo_extra FOR SELECT
USING (
    (
        SELECT can_register_extra_time
        FROM public.user_permissions
        WHERE user_id = auth.uid()
    ) = true
);